"""changed start and end time to strings

Revision ID: 1360ab938d81
Revises: 32ddcfdb6e64
Create Date: 2024-08-07 15:46:47.922534

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision = '1360ab938d81'
down_revision = '32ddcfdb6e64'
branch_labels = None
depends_on = None


def upgrade():
   def upgrade():
    # Use the bind to get the connection
    bind = op.get_bind()
    
    # Check if 'schedules' table exists before trying to drop it
    table_exists_query = text("""
        SELECT EXISTS (
            SELECT 1
            FROM information_schema.tables
            WHERE table_name = 'schedules'
        )
    """)
    
    if bind.execute(table_exists_query).scalar():
        op.execute('DROP TABLE schedules CASCADE')

    # Check if 'courses' table exists before trying to drop it
    table_exists_query = text("""
        SELECT EXISTS (
            SELECT 1
            FROM information_schema.tables
            WHERE table_name = 'courses'
        )
    """)
    
    if bind.execute(table_exists_query).scalar():
        op.drop_table('courses')

    # Check if 'hub_credits' table exists before trying to drop it
    table_exists_query = text("""
        SELECT EXISTS (
            SELECT 1
            FROM information_schema.tables
            WHERE table_name = 'hub_credits'
        )
    """)
    
    if bind.execute(table_exists_query).scalar():
        op.drop_table('hub_credits')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schedules',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('schedules_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('monday', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('tuesday', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('wednesday', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('thursday', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('friday', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('saturday', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('sunday', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='schedules_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('hub_credits',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('hub_credits_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('historical_context', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('individual_in_community', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('research_and_information', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('social_inquiry_2', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('global_citizenship', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('writing_intensive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('ethical_reasoning', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('critical_thinking', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('creativity_and_innovation', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('teamwork_and_collaboration', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('scientific_inquiry_1', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('digital_multimedia', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('oral_and_signed_communication', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('aesthetic_exploration', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('philosophical_inquiry', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('first_year_writing', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='hub_credits_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('courses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('course_name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('catalog_number', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('class_section', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('start_time', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('end_time', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('class_room', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('instructor', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('lab_parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('discussion_parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('schedule_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hub_credits_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['discussion_parent_id'], ['courses.id'], name='courses_discussion_parent_id_fkey'),
    sa.ForeignKeyConstraint(['hub_credits_id'], ['hub_credits.id'], name='courses_hub_credits_id_fkey'),
    sa.ForeignKeyConstraint(['lab_parent_id'], ['courses.id'], name='courses_lab_parent_id_fkey'),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], name='courses_schedule_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='courses_pkey')
    )
    # ### end Alembic commands ###
